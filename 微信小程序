php
Base.php

protected function initialize()
{
    parent::initialize();
    $token = Request::header('token');
    if(cache('user.access_token.'.$token)){
        $openid = cache('user.access_token.'.$token);
        $user = Db::name('user')
            ->where(['mp_openid'=>$openid])
            ->find();
        $this->user = $user;
    }else{
        $this->user = '';
    }
}


public function getAccessToken($reset = 0){
    if (!$reset) {
        if(cache('wx.user.access_token')){
            return cache('wx.user.access_token');
        }
    }
    $config = DB::name('config')->order('id desc')->find();
    $url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid={$config['appid']}&secret={$config['secrate']}";
    $result = json_decode(curl_file_get_contents($url),true);
    cache('wx.user.access_token',$result['access_token'],'5400');
    return cache('wx.user.access_token');
}


middleware/ApiCheck.php
public function handle($request, \Closure $next)
{
    $token = Request::header('token');
    if(cache("user.access_token.{$token}")){
        return  $next($request);
    }else{
        throw new \think\exception\HttpResponseException(\think\Response::create([
            'code' => 401,
            'msg' => '登录态过期，请重新登录',
            'data' => ''
        ], 'json'));
    }
}

route.php
//登录
Route::post('login', 'api/login/login');
Route::group('', function () {
    //用户
    Route::group('user', function () {
        Route::post('saveUserInfo', 'api/user/saveUserInfo');
        Route::post('getUserInfo', 'api/user/getUserInfo');
    });
})->middleware(\app\api\middleware\ApiCheck::class);


user.php
//保存用户信息
public function saveUserInfo(){
    $data = checkInput(['nickName','gender','avatarUrl']);
    if(! is_array($data)){
        return $data;
    }
    Db::name('user')->where('id',$this->user['id'])->update([
        'nickname' =>  emoji_encode($data['nickName']),
        'gender'    =>  $data['gender'],
        'avatarurl' =>  $data['avatarUrl']
    ]);
    return api_back(200,'保存成功');
}
//获取用户信息
public function getUserInfo(){
    $user = Db::name('user')->where('id',$this->user['id'])->field('id,nickname,gender,avatarurl')->find();
    return api_back(200,'获取成功',$user);
}

index.php
    /**
     * 图片上传
     */

    public function uploadsImage()
    {
        $file = request()->file('file');
        $maxPx = input('maxPx') ? input('maxPx') : 0; //最大图片像素尺寸
        $maxPx = $maxPx < 2000 ? $maxPx : 2000;
        $savename = \think\facade\Filesystem::disk('public')->putFile('img', $file);
        $savename = str_replace('\\', '/', $savename);
        $retPath = 'uploads/' . $savename;
        changeImgSize($retPath, $maxPx);
        if ($savename) { //如果有返回路径
            Db::name('source')->insert(['url'=>$retPath]);
            return api_back(200,'上传成功',$retPath);
        } else {
            return api_back(409,'上传失败');
        }
    }
